{"version":3,"sources":["./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/core/browse/browse.component.ts","./src/app/core/browse/browse.component.html","./src/app/core/home/home.component.ts","./src/app/core/home/home.component.html","./src/app/user/user.module.ts","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/environments/environment.ts","./src/app/user/profile/profile.component.ts","./src/app/user/profile/profile.component.html","./src/app/services/movie.service.ts","./src/app/movie/edit/edit.component.ts","./src/app/movie/edit/edit.component.html","./src/app/shared/validators.ts","./src/app/core/side-nav/side-nav.component.ts","./src/app/core/side-nav/side-nav.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/movie/create/create.component.ts","./src/app/movie/create/create.component.html","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/user/user-routing.module.ts","./src/app/app.module.ts","./src/app/user/register/register.component.ts","./src/app/user/register/register.component.html","./src/app/shared/spinner/spinner.component.ts","./src/app/shared/spinner/spinner.component.html","./src/app/movie/details/details.component.ts","./src/app/movie/details/details.component.html","./src/app/material/material.module.ts","./src/app/services/upload.service.ts","./src/app/core/core.module.ts","./src/app/services/user.service.ts","./src/app/movie/movie.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  regex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  error: string\n  constructor(private userService: UserService, private router: Router) { }\n\n  submitHandler(fV: Object): void {\n    this.userService.login(fV).subscribe(\n      res=> this.router.navigate([\"/browse\"]),\n      err => {\n        timer(4000).subscribe(_ => this.error = undefined)\n        this.error = err.error.message\n      }\n    )\n  }\n\n}\n","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\n\n<form action=\"\" class=\"login-box\" #f=\"ngForm\" (ngSubmit)=\"submitHandler(f.value)\">\n    <h1>Login</h1>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"email.touched && email.errors?.required\">\n            Email is required\n        </p>\n        <p class=\"error\" *ngIf=\"email.touched && email.errors?.pattern\">\n            Email is in incorrect format\n        </p>\n        <i class=\"fas fa-user\"></i>\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" ngModel #email=\"ngModel\" required [pattern]=\"regex\" [class.input-error]=\"email.touched && email.errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"password.touched && password.errors?.required\">Password is required</p>\n        <i class=\"fas fa-lock\"></i>\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" ngModel #password=\"ngModel\" required [class.input-error]=\"password.touched && password.errors\">\n    </div>\n    <input type=\"submit\" class=\"btn\" value=\"Sign In\" [disabled]=\"f.invalid\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { IMovie } from \"../../interfaces/movie\"\n\n@Component({\n  selector: 'app-browse',\n  templateUrl: './browse.component.html',\n  styleUrls: ['./browse.component.css']\n})\nexport class BrowseComponent implements OnInit {\n  movies: IMovie[]\n  pages: Number[]\n  page: number\n  models: String[]\n  error: string\n\n  constructor(private movieService: MovieService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.pipe(switchMap(params => {\n      this.page = Number(params.page) || 1\n      return this.movieService.loadNextMovies((this.page - 1) * 4)\n    })).subscribe(movies => {\n      this.movies = movies\n    }, (err) => this.error = err.error.message)\n\n    this.movieService.loadAllMovies().subscribe(x => {\n      this.pages = Array.from({ length: Math.ceil(x.length / 4) }, (v, i) => i + 1)\n    })\n  }\n}\n","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\n<div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n        <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" *ngFor=\"let movie of movies\">\n            <mat-card class=\"mat-elevation-z4\">\n                <mat-card-header>\n                    <mat-card-title>{{movie.name}}</mat-card-title>\n                </mat-card-header>\n                <img mat-card-image [src]=\"movie.imageUrl\">\n                <mat-card-subtitle>\n                    <p>\n                        Genre: {{movie.genre}}\n                    </p>\n                </mat-card-subtitle>\n                <mat-card-actions>\n                    <a [routerLink]=\"['/details', movie._id]\" class=\"btn btn-md btn-primary\">Details</a>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>\n<nav data-pagination *ngIf=\"pages && page && pages.length > 1\">\n    <a routerLink=\"/browse\" [queryParams]=\"{'page': this.page - 1}\" *ngIf=\"this.page - 1 > 0\"><i\n            class=\"fas fa-backward\"></i></a>\n    <ul>\n        <li *ngFor=\"let x of pages\">\n            <a routerLink=\"/browse\" [queryParams]=\"{'page': x}\" [class.active]=\"x === page\">{{x}}</a>\n        </li>\n    </ul>\n    <a routerLink=\"/browse\" [queryParams]=\"{'page': this.page + 1}\" *ngIf=\"this.page - this.pages.length < 0\"><i\n            class=\"fas fa-forward\"></i></a>\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'ngbd-carousel-navigation',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  providers: [NgbCarouselConfig]  // add NgbCarouselConfig to the component providers\r\n})\r\nexport class HomeComponent implements OnInit{\r\n\r\n  constructor(private userService: UserService, private router: Router) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    if(this.userService.isLogged) {\r\n      this.router.navigate([\"/browse\"])\r\n    }\r\n  }\r\n\r\n}","<ngb-carousel class=\"carousel-container\">\n    <ng-template ngbSlide>\n        <div class=\"carousel-item active\"\n            style=\"background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=740&q=80')\">\n            <div class=\"container\">\n                <h1>Watch movies</h1>\n                <p>Check what movies we have after signing up</p>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template ngbSlide>\n        <div class=\"carousel-item active\"\n            style=\"background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(https://images.unsplash.com/photo-1594908900066-3f47337549d8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=750&q=80)\">\n            <div class=\"container\">\n                <h1>Do you already have an account?</h1>\n                <p>Sign in right now and have fun</p>\n                <a routerLink=\"/user/login\" class=\"btn btn-lg btn-primary\">Sign up</a>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template ngbSlide>\n        <div class=\"carousel-item active\"\n            style=\"background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),url(https://images.unsplash.com/photo-1586899028174-e7098604235b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=751&q=80)\">\n            <div class=\"container\">\n                <h1>If you dont have an account? Please, Sign Up</h1>\n                <p>Sign up and have fun</p>\n                <a routerLink=\"/user/register\" class=\"btn btn-lg btn-primary\">Sign in</a>\n            </div>\n        </div>\n    </ng-template>\n</ngb-carousel>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    SharedModule,\n    NgbModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule\n  ],\n  exports: [\n  ],\n  providers: [UserService]\n})\nexport class UserModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Output() public sidenavToggle = new EventEmitter();\r\n\r\n  get isLogged(): boolean {\r\n    return this.userService.isLogged\r\n  }\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onToggleSidenav = () => {\r\n    this.sidenavToggle.emit();\r\n  }\r\n  logout(event): void {\r\n    event.preventDefault()\r\n    this.userService.logout().subscribe({\r\n      next: () => {\r\n        this.router.navigate([\"/\"])\r\n      },\r\n      error: (error: Error) => console.log(error.message)\r\n    })  \r\n  }\r\n}\r\n","<mat-toolbar color=\"dark\">\r\n    <div fxHide.gt-xs>\r\n        <button mat-icon-button (click)=\"onToggleSidenav()\">\r\n            <mat-icon color=\"accent\" class=\"toggle\">menu</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div fxFlex fxLayout fxLayoutAlign=\"start\" fxHide.xs>\r\n        <a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" *ngIf=\"!isLogged\">HOME</a>\r\n        <a routerLink=\"/browse\" routerLinkActive=\"active\" *ngIf=\"isLogged\">BROWSE</a>\r\n        <a routerLink=\"/create\" routerLinkActive=\"active\" *ngIf=\"isLogged\">CREATE</a>\r\n    </div>\r\n    <div fxFlex fxLayout fxLayoutAlign=\"end\" fxHide.xs>\r\n        <ul fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\r\n            <li *ngIf=\"isLogged\">\r\n                <a routerLink=\"/user/profile\" routerLinkActive=\"active\">PROFILE</a>\r\n            </li>\r\n            <li *ngIf=\"isLogged\">\r\n                <a (click)=\"logout($event)\">SIGN OUT</a>\r\n            </li>\r\n            <li *ngIf=\"!isLogged\">\r\n                <a routerLink=\"/user/login\" routerLinkActive=\"active\">LOGIN</a>\r\n            </li>\r\n            <li *ngIf=\"!isLogged\">\r\n                <a routerLink=\"/user/register\" routerLinkActive=\"active\">REGISTER</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<!-- <app-alert message=\"\"></app-alert> -->\r\n<div class=\"container-fluid py-5 mx-auto\">\r\n    <div class=\"card py-4 px-4\">\r\n        <div class=\"row justify-content-start px-3\">\r\n            <div class=\"image-bg mr-3\"> <img class=\"user-img fit-image\" src=\"https://toppng.com/uploads/preview/company-profile-video-production-icon-circle-11569043630cktfusgdy8.png\"> </div>\r\n            <div class=\"text-left\">\r\n                <h2>Test</h2>\r\n                <h6>Test@abv.bg</h6>\r\n            </div>\r\n            <a class=\"btn btn-pink ml-auto\">\r\n                <span><mat-icon>edit</mat-icon></span>\r\n            </a>\r\n        </div>\r\n        <div class=\"line\">Liked Movies</div>\r\n        <div class=\"row d-flex justify-content-between px-3\">\r\n            <div class=\"prod-bg text-center py-1\">\r\n                <img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\">\r\n            </div>\r\n            <div class=\"prod-bg text-center py-1\"><img class=\"prod-pic\" src=\"https://m.media-amazon.com/images/M/MV5BMjI0NmFkYzEtNzU2YS00NTg5LWIwYmMtNmQ1MTU0OGJjOTMxXkEyXkFqcGdeQXVyMjMxOTE0ODA@._V1_.jpg\"></div>\r\n            <div class=\"prod-bg text-center py-1\"><img class=\"prod-pic\" src=\"https://m.media-amazon.com/images/M/MV5BMjI0NmFkYzEtNzU2YS00NTg5LWIwYmMtNmQ1MTU0OGJjOTMxXkEyXkFqcGdeQXVyMjMxOTE0ODA@._V1_.jpg\"></div>\r\n            <div class=\"prod-bg text-center py-1\"><img class=\"prod-pic\" src=\"https://m.media-amazon.com/images/M/MV5BMjI0NmFkYzEtNzU2YS00NTg5LWIwYmMtNmQ1MTU0OGJjOTMxXkEyXkFqcGdeQXVyMjMxOTE0ODA@._V1_.jpg\"></div>\r\n        </div>\r\n        <div class=\"line\">My Movies</div>\r\n        <div class=\"row d-flex justify-content-between px-3\">\r\n            <a class=\"prod-bg text-center py-1\" href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n            <a class=\"prod-bg text-center py-1\"  href=\"#\"><img class=\"prod-pic\" src=\"https://upload.wikimedia.org/wikipedia/en/1/14/Tenet_movie_poster.jpg\"></a>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IComment } from '../interfaces/comment';\nimport { IMovie } from '../interfaces/movie';\n\n@Injectable()\n\nexport class MovieService {\n\n  constructor(private http: HttpClient) { }\n\n  loadNextMovies(offset: number): Observable<IMovie[]> {\n    return this.http.get<IMovie[]>(`/api/movies?offset=${offset}`, { withCredentials: true })\n  }\n  loadAllMovies(): Observable<IMovie[]> {\n    return this.http.get<IMovie[]>(`/api/movies`, { withCredentials: true })\n  }\n  loadMovieById(id: String): Observable<IMovie> {\n    return this.http.get<IMovie>(\"/api/movies/\" + id, { withCredentials: true })\n  }\n  createMovie(data: IMovie): Observable<IMovie> {\n    return this.http.post<IMovie>(\"/api/movies\", data, { withCredentials: true })\n  }\n  comment(data: {message: string, movie: string}): Observable<IComment[]> {\n    return this.http.post<IComment[]>(\"/api/movies/comment\", data, { withCredentials: true })\n  }\n  deleteComment(commentId) {\n    return this.http.delete<IComment[]>(\"/api/movies/comment/\"+ commentId, { withCredentials: true })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container edit-trip\">\n    <h1>Edit movie</h1>\n    <div>\n        <form action=\"\" method=\"POST\">\n            <div class=\"edit-label\">\n                <label for=\"name\"> Movie Name </label>\n                <label for=\"trailerID\"> Movie Youtube Trailer ID </label>\n            </div>\n            <div class=\"form-group edit-input\">\n                <input type=\"text\" class=\"form-control-2\" id=\"name\" placeholder=\"Movie Name\" name=\"name\" value=\"\">\n                <input type=\"text\" class=\"form-control-2\" id=\"trailerID\" placeholder=\"Youtube Trailer ID\"\n                    name=\"trailerID\" value=\"\">\n            </div>\n            <div class=\"edit-label\">\n                <label for=\"genres\">Genres</label>\n                <label for=\"actors\">Actors</label>\n            </div>\n            <div class=\"form-group edit-input\">\n                <input type=\"text\" class=\"form-control-2\" id=\"genres\" placeholder=\"Genres\" name=\"genres\" value=\"\">\n                <input type=\"text\" class=\"form-control-2\" id=\"actors\" placeholder=\"Actors\" name=\"actors\" value=\"\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"movieImage\">Movie Image</label>\n                <input type=\"text\" class=\"form-control\" id=\"movieImage\" placeholder=\"https://...\" name=\"imageUrl\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Description</label>\n                <textarea class=\"form-control\" id=\"description\" placeholder=\"Information about the movie\"\n                    name=\"description\"></textarea>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>\n        </form>\n    </div>\n</div>","import { FormGroup } from '@angular/forms';\r\n    \r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n            return ({ confirmedValidator: true })\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n        return null\r\n    }\r\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n  @Output() sidenavClose = new EventEmitter();\r\n  get isLogged(): boolean {\r\n    return this.userService.isLogged\r\n  }\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  public onSidenavClose = () => {\r\n    this.sidenavClose.emit();\r\n  }\r\n  logout(event): void {\r\n    event.preventDefault()\r\n    this.userService.logout().subscribe({\r\n      next: () => {\r\n        this.sidenavClose.emit();\r\n        this.router.navigate([\"/\"])\r\n      },\r\n      error: (error: Error) => console.log(error.message)\r\n    })  \r\n  }\r\n}\r\n","<mat-nav-list>\r\n    <a mat-list-item routerLink=\"/\" (click)=\"onSidenavClose()\" *ngIf=\"!isLogged\">\r\n        <mat-icon>home</mat-icon> <span class=\"nav-caption\">Home</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/browse\" (click)=\"onSidenavClose()\" *ngIf=\"isLogged\">\r\n        <mat-icon>local_movies</mat-icon> <span class=\"nav-caption\">BROWSE</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/create\" (click)=\"onSidenavClose()\" *ngIf=\"isLogged\">\r\n        <mat-icon>add</mat-icon><span class=\"nav-caption\">Create</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/user/register\" (click)=\"onSidenavClose()\" *ngIf=\"!isLogged\">\r\n        <mat-icon>lock</mat-icon><span class=\"nav-caption\" >REGISTER</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/user/login\" (click)=\"onSidenavClose()\" *ngIf=\"!isLogged\">\r\n        <mat-icon>lock_open</mat-icon><span class=\"nav-caption\">LOGIN</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/user/profile\" (click)=\"onSidenavClose()\" *ngIf=\"isLogged\">\r\n        <mat-icon>face</mat-icon><span class=\"nav-caption\">PROFILE</span>\r\n    </a>\r\n    <a mat-list-item *ngIf=\"isLogged\" (click)=\"logout($event)\">\r\n        <mat-icon>exit_to_app</mat-icon><span class=\"nav-caption\">SIGN OUT</span>\r\n    </a>\r\n</mat-nav-list>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertComponent } from './alert/alert.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SpinnerComponent } from './spinner/spinner.component';\n\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    SpinnerComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbModule\n  ],\n  exports: [AlertComponent, SpinnerComponent]\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'html3';\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav role=\"navigation\">\n    <app-side-nav (sidenavClose)=\"sidenav.close()\"></app-side-nav>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-header (sidenavToggle)=\"sidenav.toggle()\"></app-header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IMovie } from 'src/app/interfaces/movie';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { UploadService } from 'src/app/services/upload.service';\nimport { timer } from \"rxjs\"\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  isLoading: Boolean = false\n  imgNameAndSize: string = \"Choose Movie Image\"\n  trailerNameAndSize: string = \"Choose Movie Trailer under 100MB\"\n  imageFile: File = undefined\n  trailerFile: File = undefined\n  error: String\n  imgfileError: string\n  trailerFileError: string\n\n  constructor(private movieService: MovieService, private uploadService: UploadService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  submitHandler(fV: IMovie): void {\n    const data = {\n      author: fV.author,\n      description: fV.description,\n      genre: fV.genre,\n      name: fV.name,\n    }\n    this.isLoading = true\n    Promise.all([\n      this.uploadService.upload(this.imageFile).toPromise(),\n      this.uploadService.upload(this.trailerFile).toPromise(),\n    ]).then(x => {\n      const image = x.find(file => file.video === undefined)\n      const trailer = x.find(file => file.video !== undefined)      \n      \n      Object.assign(data, { trailerID: trailer.public_id, trailerUrl: trailer.url, imageID: image.public_id, imageUrl: image.url })\n      this.movieService.createMovie(data as IMovie).subscribe(\n        res => {\n          this.isLoading = false\n          this.router.navigate([\"/browse\"])\n        },\n        err => {\n          this.isLoading = false\n          timer(4000).subscribe(_ => this.error = undefined)\n          this.error = err.error.message\n        })\n    })\n  }\n  onImgChange(event): void {\n    const [file] = event.target.files\n    const { name: fileName, size } = file;\n    const fileSize = (size / 1000).toFixed(2);\n    this.imgNameAndSize = `${fileName} - ${fileSize}KB`;\n    if (![\"image/jpg\", \"image/jpeg\", \"image/png\"].includes(file.type)) {\n      this.imageFile = undefined\n      this.imgfileError = \"Image should be in image format\"\n      return undefined\n    }\n    this.imgfileError = undefined\n    this.imageFile = file\n  }\n  onTrailerChange(event): void {\n    const [file] = event.target.files\n    const { name: fileName, size } = file;\n    const fileSize = (size / 1000).toFixed(2);\n    this.trailerNameAndSize = `${fileName} - ${fileSize}KB`;\n    if (![\"video/mp4\", \"video/mov\", \"video/wmv\", \"video/avi\"].includes(file.type)) {\n      this.trailerFile = undefined\n      this.trailerFileError = \"Trailer should be in video format\"\n      return undefined\n    }\n    if(Number(fileSize) > 100000) {\n      this.trailerFile = undefined\n      this.trailerFileError = \"Trailer should be under 100MB\"\n      return undefined\n    }\n    this.trailerFileError = undefined\n    this.trailerFile = file\n  }\n}\n","<app-alert [message]=\"error\" *ngIf=\"error\"></app-alert>\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\n<div class=\"container create-trip\">\n    <h1>Create movie</h1>\n    <div>\n        <form #f=\"ngForm\" (ngSubmit)=\"submitHandler(f.value)\">\n            <div class=\"form-group\">\n                <label for=\"name\"> Movie Name \n                    <p class=\"error\" *ngIf=\"movie.touched && movie.errors?.required\">Movie name is required</p>\n                </label>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Movie Name\" name=\"name\" ngModel\n                    required #movie=\"ngModel\" [class.input-error]=\"movie.touched && movie.errors\">\n            </div>\n            <div class=\"create-label\">\n                <label for=\"genre\">\n                    Genre\n                    <p class=\"error\" *ngIf=\"genre.touched && genre.errors?.required\">Genre is required</p>\n                </label>\n                <label for=\"author\">Author\n                    <p class=\"error\" *ngIf=\"author.touched && author.errors?.required\">Author is required</p>\n                </label>\n            </div>\n            <div class=\"form-group create-input\">\n                <input type=\"text\" class=\"form-control-2\" id=\"genre\" placeholder=\"Genre\" name=\"genre\" ngModel required\n                    #genre=\"ngModel\" [class.input-error]=\"genre.touched && genre.errors\">\n                <input type=\"text\" class=\"form-control-2\" id=\"author\" placeholder=\"Author\" name=\"author\" ngModel\n                    required #author=\"ngModel\" [class.input-error]=\"author.touched && author.errors\">\n            </div>\n            <div class=\"form-group\">\n                <p class=\"error\" *ngIf=\"trailerFileError\">{{trailerFileError}}</p>\n                <label for=\"trailer\" class=\"file-label\">{{trailerNameAndSize}}</label>\n                <input type=\"file\" name=\"trailer\" id=\"trailer\" class=\"file\" ngModel #trailer=\"ngModel\" required (change)=\"onTrailerChange($event)\">\n            </div>\n            <div class=\"form-group\">\n                <p class=\"error\" *ngIf=\"imgfileError\">{{imgfileError}}</p>\n                <label for=\"movieImage\" class=\"file-label\">{{imgNameAndSize}}</label>\n                <input type=\"file\" name=\"image\" id=\"movieImage\" class=\"file\" ngModel #img=\"ngModel\" required (change)=\"onImgChange($event)\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Description\n                    <p class=\"error\" *ngIf=\"description.touched && description.errors?.required\">\n                        Description is required\n                    </p>\n                    <p class=\"error\" *ngIf=\"description.touched && description.errors?.minlength\">\n                        Description must be atleast 10 characters long\n                    </p>\n                </label>\n                <textarea class=\"form-control\" id=\"description\" placeholder=\"Information about the movie\"\n                    name=\"description\" ngModel required minlength=\"10\" #description=\"ngModel\" [class.input-error]=\"description.touched && description.errors\"></textarea>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || !imageFile || !trailerFile\">Create</button>\n        </form>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: [\"./alert.component.css\"]\n})\nexport class AlertComponent {\n  @Input() message: String\n\n  constructor() {\n  }\n}","<div class=\"error\">\n    <p>{{message}}</p>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"user\",\r\n        children: [\r\n            {\r\n                path: \"login\",\r\n                component: LoginComponent\r\n            },\r\n            {\r\n                path: \"register\",\r\n                component: RegisterComponent\r\n            },\r\n            {\r\n                path: \"profile\",\r\n                component: ProfileComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { CoreModule } from './core/core.module';\nimport { MovieService } from './services/movie.service';\nimport { SharedModule } from './shared/shared.module';\nimport { UserModule } from './user/user.module';\nimport { MovieModule } from './movie/movie.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    HttpClientModule,\n    MaterialModule,\n    SharedModule,\n    UserModule,\n    MovieModule,\n\n  ],\n  exports: [\n  ],\n  providers: [MovieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\nimport { ConfirmedValidator } from '../../shared/validators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: FormGroup\n  error: string\n  isSubmited: boolean = false\n\n  constructor(private fb: FormBuilder, private userService: UserService, private router: Router) {\n    this.form = this.fb.group({\n      email: [\"\", [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n      username: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n      repeatPassword: [\"\", [Validators.required]]\n    }, { validators: [ConfirmedValidator(\"password\", \"repeatPassword\")]})\n  }\n  ngOnInit () {\n\n  }\n  submitHandler(): void {\n    this.userService.register(this.form.value).subscribe(res => {\n        this.router.navigate([\"/browse\"])\n      },\n      err => {\n        timer(4000).subscribe(_ => this.error = undefined)\n        this.error = err.error.message\n      }\n    )\n  }\n}","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\n<!-- <button (click)=\"changeError()\">asdadaasd</button> -->\n\n<form class=\"register-box\" [formGroup]=\"form\" (ngSubmit)=\"submitHandler()\">\n    <h1>Register</h1>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('email').touched && form.get('email').errors?.required\">Email is required</p>\n        <p class=\"error\" *ngIf=\"form.get('email').touched && form.get('email').errors?.pattern\">Email is in incorrect format</p>\n        <i class=\"fas fa-user\"></i>\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" formControlName=\"email\"\n            [class.input-error]=\"form.get('email').touched && form.get('email').errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('username').touched && form.get('username').errors?.required\">Username is required</p>\n        <i class=\"fas fa-user-tie\"></i>\n        <input type=\"text\" placeholder=\"Username\" name=\"username\" formControlName=\"username\"\n            [class.input-error]=\"form.get('username').touched && form.get('username').errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('password').touched && form.get('password').errors?.required\">Password is required</p>\n        <i class=\"fas fa-lock\"></i>\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" formControlName=\"password\"\n            [class.input-error]=\"form.get('password').touched && form.get('password').errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('repeatPassword').touched && form.get('repeatPassword').errors?.required\">Repeat Password is required</p>\n        <p class=\"error\" *ngIf=\"form.get('repeatPassword').touched && form.get('repeatPassword').errors?.confirmedValidator\">Passwords must match</p>\n        <i class=\"fas fa-key\"></i>\n        <input type=\"password\" placeholder=\"Repeat Password\" name=\"repeatPassword\" formControlName=\"repeatPassword\"\n            [class.input-error]=\"form.get('repeatPassword').touched && form.get('repeatPassword').errors\">\n    </div>\n    <input type=\"submit\" class=\"btn\" value=\"Sign Up\" [disabled]=\"form.invalid\">\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader\"></div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { IComment } from 'src/app/interfaces/comment';\nimport { IMovie } from 'src/app/interfaces/movie';\nimport { IUser } from 'src/app/interfaces/user';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  movieId: string\n  movie: IMovie\n  comments: IComment[]\n  user: IUser\n  error: string\n\n  constructor(private route: ActivatedRoute, private movieService: MovieService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser().subscribe(x=> {\n      this.user = x\n    }, (err) => this.error = err.error.message)    \n    this.route.params.pipe(switchMap(params => {\n      this.movieId = params.id\n      return this.movieService.loadMovieById(this.movieId)\n    })).subscribe(movie => {\n      this.movie = movie \n      this.comments = movie.comments     \n    }, (err) => this.error = err.error.message)\n  }\n  comment(fV) {\n    Object.assign(fV, {movie: this.movieId})\n    this.movieService.comment(fV).subscribe(x=> {\n      this.comments = x\n    }, (err) => this.error = err.error.message)\n  }\n  deleteComment(commentId) {\n    this.movieService.deleteComment(commentId).subscribe(x=> {\n      this.comments = x\n    }, (err) => this.error = err.error.message)\n  }\n}\n","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\n<div class=\"content\" *ngIf=\"movie\">\n    <div fxLayout=\"row wrap\">\n        <div fxFlex=\"100%\">\n            <mat-card class=\"mat-elevation-z4 container\">\n                <div class=\"wrapper\">\n                    <video [src]=\"movie.trailerUrl\" controls width=\"100%\" height=\"450px\" [poster]=\"movie.imageUrl\">\n                    </video>\n                    <div class=\"info\">\n                        <p>Description: {{movie.description}}</p>\n                        <p>Genre: {{movie.genre}}</p>\n                        <p>Author: {{movie.author}}</p>\n                    </div>\n                    <mat-card-actions>\n                        <a routerLink=\"/edit/1\" class=\"orange\" mat-button>\n                            <mat-icon>edit</mat-icon>\n                            Edit\n                        </a>\n                        <a routerLink=\"/watch/1\" class=\"red\" mat-button>\n                            <mat-icon>delete</mat-icon>\n                            Delete\n                        </a>\n                        <a routerLink=\"/watch/1\" class=\"blue\" mat-button>\n                            <mat-icon>thumb_up</mat-icon>\n                            Like\n                        </a>\n                    </mat-card-actions>\n                </div>\n                <section>\n                    <form #f=\"ngForm\" (ngSubmit)=\"comment(f.value); f.reset()\">\n                        <div class=\"d-flex flex-row add-comment-section mt-4 mb-4\">\n                            <img class=\"img-fluid img-responsive rounded-circle mr-2\"\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1024px-Circle-icons-profile.svg.png\"\n                                width=\"38\">\n                            <input type=\"text\" class=\"form-control mr-3 comment\" placeholder=\"Add comment\"\n                                name=\"message\" ngModel required #message=\"ngModel\"\n                                [class.input-error]=\"message.touched && message.errors\">\n                            <input class=\"btn btn-primary\" type=\"submit\" value=\"Comment\" [disabled]=\"f.invalid\">\n                        </div>\n                    </form>\n                    <ul>\n                        <li *ngFor=\"let comment of comments\">\n                            <div class=\"d-flex flex-row align-items-center commented-user\">\n                                <h5 class=\"mr-2\" *ngIf=\"comment.owner._id == user._id\">{{comment.owner.username}} (you)\n                                </h5>\n                                <h5 class=\"mr-2\" *ngIf=\"comment.owner._id != user._id\">{{comment.owner.username}}</h5>\n                            </div>\n                            <div class=\"comment-text-sm\"><span>{{comment.message}}</span></div>\n                            <div class=\"reply-section\">\n                                <div class=\"d-flex flex-row align-items-center voting-icons\">\n                                    <mat-icon class=\"vote\" [class.disabled]=\"true\"\n                                        *ngIf=\"comment.owner._id != user._id\">thumb_up</mat-icon>\n\n                                    <mat-icon class=\"vote\"\n                                        *ngIf=\"comment.owner._id != user._id\">thumb_down</mat-icon>\n\n                                    <span class=\"ml-2\">{{comment.likes.length}}</span>\n                                    <mat-icon *ngIf=\"comment.owner._id == user._id\" class=\"trashcan\"\n                                        (click)=\"deleteComment(comment._id)\">delete</mat-icon>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </section>\n            </mat-card>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { MatSidenavModule } from \"@angular/material/sidenav\"\nimport { MatTabsModule } from \"@angular/material/tabs\"\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule} from \"@angular/material/icon\"\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from \"@angular/material/card\"\nimport { MatPaginatorModule } from \"@angular/material/paginator\"\nimport { MatInputModule } from \"@angular/material/input\"\nimport { MatFormFieldModule } from \"@angular/material/form-field\"\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatCardModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule\n  ]\n})\nexport class MaterialModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private http: HttpClient) { }\n\n  upload(file: File): Observable<any> {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", \"HotFlix\")\n      formData.append(\"cloud_name\", \"douwa5b0u\")\n    \n     return this.http.post(\"https://api.cloudinary.com/v1_1/douwa5b0u/auto/upload\", formData)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { BrowseComponent } from './browse/browse.component';\nimport { MaterialModule } from '../material/material.module';\nimport { SideNavComponent } from './side-nav/side-nav.component';\nimport { RouterModule } from '@angular/router';\nimport { UserRoutingModule } from '../user/user-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HomeComponent } from './home/home.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UserService } from '../services/user.service';\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    BrowseComponent,\n    SideNavComponent,\n    HomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule,\n    UserRoutingModule,\n    SharedModule,\n    NgbModule\n  ],\n  exports: [\n    HeaderComponent,\n    SideNavComponent,\n  ],\n  providers: [UserService]\n})\nexport class CoreModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IUser } from '../interfaces/user';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  get isLogged(): boolean {\r\n    return !!sessionStorage.getItem(\"isLogged\")\r\n  }\r\n  constructor(private http: HttpClient) { }\r\n\r\n  register(body: Object): Observable<IUser> {\r\n    return this.http.post<IUser>(`/api/user/register`, body, { withCredentials: true }).pipe(tap((x: IUser) => {\r\n      sessionStorage.setItem(\"isLogged\", \"true\")\r\n    }))\r\n  }\r\n  login(body: Object): Observable<IUser> {\r\n    return this.http.post<IUser>(`/api/user/login`, body, { withCredentials: true }).pipe(tap((x: IUser) => {\r\n      sessionStorage.setItem(\"isLogged\", \"true\")\r\n    }))\r\n  }\r\n  logout(): Observable<any> {\r\n    return this.http.post<any>(`/api/user/logout`, {}, { withCredentials: true }).pipe(tap(() => {\r\n      sessionStorage.removeItem(\"isLogged\")\r\n    }))\r\n  }\r\n  getUser(): Observable<IUser> {\r\n    return this.http.get<IUser>(\"/api/user/profile\")\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailsComponent } from './details/details.component';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CreateComponent } from './create/create.component';\nimport { EditComponent } from './edit/edit.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { MovieService } from '../services/movie.service';\nimport { UploadService } from '../services/upload.service';\nimport { UserService } from '../services/user.service';\n\n@NgModule({\n  declarations: [DetailsComponent, CreateComponent, EditComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    SharedModule,\n    RouterModule,\n    FormsModule,\n  ],\n  exports: [\n    DetailsComponent,\n    CreateComponent,\n    EditComponent\n  ],\n  providers: [MovieService, UploadService, UserService]\n})\nexport class MovieModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DetailsComponent } from './movie/details/details.component';\nimport { BrowseComponent } from './core/browse/browse.component';\nimport { HomeComponent } from './core/home/home.component';\nimport { CreateComponent } from './movie/create/create.component';\nimport { EditComponent } from './movie/edit/edit.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    pathMatch: \"full\",\n    component: HomeComponent\n  },\n  {\n    path: \"browse\",\n    component: BrowseComponent\n  },\n  {\n    path: \"details/:id\",\n    component: DetailsComponent\n  },\n  {\n    path: \"create\",\n    component: CreateComponent\n  },\n  {\n    path: \"edit/:id\",\n    component: EditComponent\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}