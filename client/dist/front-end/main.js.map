{"version":3,"sources":["./src/app/user/login/login.component.html","./src/app/user/login/login.component.ts","./src/app/core/browse/browse.component.ts","./src/app/core/browse/browse.component.html","./src/app/core/home/home.component.ts","./src/app/core/home/home.component.html","./src/app/services/alert.service.ts","./src/app/user/edit/edit.component.html","./src/app/user/edit/edit.component.ts","./src/app/core/not-found/not-found.component.ts","./src/app/core/not-found/not-found.component.html","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/environments/environment.ts","./src/app/user/profile/profile.component.html","./src/app/user/profile/profile.component.ts","./src/app/services/movie.service.ts","./src/app/movie/edit/edit.component.ts","./src/app/movie/edit/edit.component.html","./src/app/shared/validators.ts","./src/app/core/side-nav/side-nav.component.ts","./src/app/core/side-nav/side-nav.component.html","./src/app/shared/shared.module.ts","./src/app/movie/movie-routing.module.ts","./src/app/core/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/owner.guard.ts","./src/app/movie/create/create.component.html","./src/app/movie/create/create.component.ts","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/user/user-routing.module.ts","./src/app/app.module.ts","./src/app/user/register/register.component.ts","./src/app/user/register/register.component.html","./src/app/shared/spinner/spinner.component.ts","./src/app/shared/spinner/spinner.component.html","./src/app/movie/details/details.component.ts","./src/app/movie/details/details.component.html","./src/app/material/material.module.ts","./src/app/services/upload.service.ts","./src/app/core/core.module.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\n<form action=\"\" class=\"login-box\" #f=\"ngForm\" (ngSubmit)=\"submitHandler(f.value)\">\n    <h1>Login</h1>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"email.touched && email.errors?.required\">\n            Email is required\n        </p>\n        <p class=\"error\" *ngIf=\"email.touched && email.errors?.pattern\">\n            Email is in incorrect format\n        </p>\n        <i class=\"fas fa-user\"></i>\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" ngModel #email=\"ngModel\" required [pattern]=\"regex\" [class.input-error]=\"email.touched && email.errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"password.touched && password.errors?.required\">Password is required</p>\n        <i class=\"fas fa-lock\"></i>\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" ngModel #password=\"ngModel\" required [class.input-error]=\"password.touched && password.errors\">\n    </div>\n    <input type=\"submit\" class=\"btn\" value=\"Sign In\" [disabled]=\"f.invalid\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  regex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  isLoading: Boolean = false\n\n  get error(): string {\n    return this.alertService.error\n  }\n  constructor(private userService: UserService, private router: Router, private alertService: AlertService) { }\n\n  submitHandler(fV: Object): void {\n    this.isLoading = true\n    this.userService.login(fV).subscribe(\n      res => {\n        this.isLoading = false\n        this.router.navigate([\"/browse\"])\n      },\n      err => {\n        this.isLoading = false\n        this.alertService.reset(err.error.message)\n      }\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { IMovie } from \"../../interfaces/movie\"\n\n@Component({\n  selector: 'app-browse',\n  templateUrl: './browse.component.html',\n  styleUrls: ['./browse.component.css']\n})\nexport class BrowseComponent implements OnInit {\n  movies: IMovie[]\n  pages: Number[]\n  page: number\n  models: String[]\n  isLoading: Boolean = false\n  \n  get error(): string {\n    return this.alertService.error\n  }\n  constructor(private movieService: MovieService, private route: ActivatedRoute, private alertService: AlertService) { }\n\n  ngOnInit(): void {\n    this.isLoading = true\n    this.route.queryParams.pipe(switchMap(params => {\n      this.page = Number(params.page) || 1\n      return this.movieService.loadNextMovies((this.page - 1) * 4)\n    })).subscribe(\n      movies => {\n        this.isLoading = false\n        this.movies = movies\n      },\n      err => {\n        this.isLoading = false\n        this.alertService.reset(err.error.message)\n      })\n    this.movieService.loadAllMovies().subscribe(x => {\n      this.pages = Array.from({ length: Math.ceil(x.length / 4) }, (v, i) => i + 1)\n    })\n  }\n}\n","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\r\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\r\n<div class=\"content\">\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\r\n        <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" *ngFor=\"let movie of movies\">\r\n            <mat-card class=\"mat-elevation-z4\">\r\n                <mat-card-header>\r\n                    <mat-card-title>{{movie.name}}</mat-card-title>\r\n                </mat-card-header>\r\n                <img mat-card-image [src]=\"movie.imageUrl\">\r\n                <mat-card-subtitle>\r\n                    <p>\r\n                        Genre: {{movie.genre}}\r\n                    </p>\r\n                </mat-card-subtitle>\r\n                <mat-card-actions>\r\n                    <a [routerLink]=\"['/movies/details', movie._id]\" class=\"btn btn-md btn-primary\">Details</a>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n<nav data-pagination *ngIf=\"pages && page && pages.length > 1\">\r\n    <a routerLink=\"/browse\" [queryParams]=\"{'page': this.page - 1}\" *ngIf=\"this.page - 1 > 0\"><i\r\n            class=\"fas fa-backward\"></i></a>\r\n    <ul>\r\n        <li *ngFor=\"let x of pages\">\r\n            <a routerLink=\"/browse\" [queryParams]=\"{'page': x}\" [class.active]=\"x === page\">{{x}}</a>\r\n        </li>\r\n    </ul>\r\n    <a routerLink=\"/browse\" [queryParams]=\"{'page': this.page + 1}\" *ngIf=\"this.page - this.pages.length < 0\"><i\r\n            class=\"fas fa-forward\"></i></a>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'ngbd-carousel-navigation',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  providers: [NgbCarouselConfig]  // add NgbCarouselConfig to the component providers\r\n})\r\nexport class HomeComponent implements OnInit{\r\n\r\n  constructor(private userService: UserService, private router: Router) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    if(this.userService.isLogged) {\r\n      this.router.navigate([\"/browse\"])\r\n    }\r\n  }\r\n\r\n}","<ngb-carousel class=\"carousel-container\">\n    <ng-template ngbSlide>\n        <div class=\"carousel-item active\"\n            style=\"background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=740&q=80')\">\n            <div class=\"container\">\n                <h1>Watch movies</h1>\n                <p>Check what movies we have after signing up</p>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template ngbSlide>\n        <div class=\"carousel-item active\"\n            style=\"background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(https://images.unsplash.com/photo-1594908900066-3f47337549d8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=750&q=80)\">\n            <div class=\"container\">\n                <h1>Do you already have an account?</h1>\n                <p>Sign in right now and have fun</p>\n                <a routerLink=\"/user/login\" class=\"btn btn-lg btn-primary\">Sign up</a>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template ngbSlide>\n        <div class=\"carousel-item active\"\n            style=\"background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),url(https://images.unsplash.com/photo-1586899028174-e7098604235b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=751&q=80)\">\n            <div class=\"container\">\n                <h1>If you dont have an account? Please, Sign Up</h1>\n                <p>Sign up and have fun</p>\n                <a routerLink=\"/user/register\" class=\"btn btn-lg btn-primary\">Sign in</a>\n            </div>\n        </div>\n    </ng-template>\n</ngb-carousel>","import { Injectable } from '@angular/core';\nimport { timer } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n\n  error: string\n  constructor() { }\n\n\n  reset(message): void {\n    timer(4000).subscribe(_ => this.error = undefined)\n    this.error = message\n  }\n}\n","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\n<app-spinner *ngIf=\"isLoading\"></app-spinner> \n\n<form class=\"register-box\" #f=\"ngForm\" (ngSubmit)=\"submitHandler(f.value)\" *ngIf=\"!isLoading\">\n    <h1>Edit Profile</h1>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"email.touched && email.errors?.required\">\n            Email is required\n        </p>\n        <i class=\"fas fa-user\"></i>\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" ngModel #email=\"ngModel\" required [class.input-error]=\"email.touched && email.errors\" [(ngModel)]=\"user.email\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"name.touched && name.errors?.required\">\n            Name is required\n        </p>\n        <i class=\"fas fa-user-tie\"></i>\n        <input type=\"text\" placeholder=\"Username\" name=\"username\" ngModel #name=\"ngModel\" required [class.input-error]=\"name.touched && name.errors\" [(ngModel)]=\"user.username\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"password.touched && password.errors?.required\">\n            Confirm Password is required\n        </p>\n        <i class=\"fas fa-lock\"></i>\n        <input type=\"text\" placeholder=\"Confirm Password\" name=\"confirmPassword\" ngModel #password=\"ngModel\" required [class.input-error]=\"password.touched && password.errors\">\n    </div>\n    <input type=\"submit\" class=\"btn\" value=\"Edit\" [disabled]=\"f.invalid\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUser } from 'src/app/interfaces/user';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  isLoading: Boolean = false\n  user: IUser\n\n  get error(): string {\n    return this.alertService.error\n  }\n\n  constructor(private userService: UserService, private alertService: AlertService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.isLoading = true\n    this.userService.getUser().subscribe(x => {\n      this.user = x\n      this.isLoading = false\n    }, err => {\n      this.isLoading = false\n      this.alertService.reset(err.error.message)\n    })\n  }\n  submitHandler(fV) {\n    this.isLoading = true\n    Object.assign(fV, { _id: this.user._id })\n    this.userService.editUser(fV).subscribe(\n      x => {\n        this.isLoading = false\n        this.router.navigate([\"/user/profile\"])\n      },\n      err => {\n        this.isLoading = false\n        this.alertService.reset(err.error.message)\n      })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"notfound\">\n    <div class=\"notfound\">\n        <div class=\"notfound-404\">\n            <h1>404</h1>\n            <h2>Page not found</h2>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Output() public sidenavToggle = new EventEmitter();\r\n\r\n  get isLogged(): boolean {\r\n    return this.userService.isLogged\r\n  }\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onToggleSidenav = () => {\r\n    this.sidenavToggle.emit();\r\n  }\r\n  logout(event): void {\r\n    event.preventDefault()\r\n    this.userService.logout().subscribe(res => {\r\n      this.router.navigate([\"/\"])\r\n    })\r\n  }\r\n}\r\n","<mat-toolbar color=\"dark\">\r\n    <div fxHide.gt-xs>\r\n        <button mat-icon-button (click)=\"onToggleSidenav()\">\r\n            <mat-icon color=\"accent\" class=\"toggle\">menu</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div fxFlex fxLayout fxLayoutAlign=\"start\" fxHide.xs>\r\n        <a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" *ngIf=\"!isLogged\">HOME</a>\r\n        <a routerLink=\"/browse\" routerLinkActive=\"active\" *ngIf=\"isLogged\">BROWSE</a>\r\n        <a routerLink=\"/movies/create\" routerLinkActive=\"active\" *ngIf=\"isLogged\">CREATE</a>\r\n    </div>\r\n    <div fxFlex fxLayout fxLayoutAlign=\"end\" fxHide.xs>\r\n        <ul fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\r\n            <li *ngIf=\"isLogged\">\r\n                <a routerLink=\"/user/profile\" routerLinkActive=\"active\">PROFILE</a>\r\n            </li>\r\n            <li *ngIf=\"isLogged\">\r\n                <a (click)=\"logout($event)\">SIGN OUT</a>\r\n            </li>\r\n            <li *ngIf=\"!isLogged\">\r\n                <a routerLink=\"/user/login\" routerLinkActive=\"active\">LOGIN</a>\r\n            </li>\r\n            <li *ngIf=\"!isLogged\">\r\n                <a routerLink=\"/user/register\" routerLinkActive=\"active\">REGISTER</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\r\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\r\n<div class=\"container-fluid py-5 mx-auto\" *ngIf=\"!isLoading\">\r\n    <div class=\"card py-4 px-4\">\r\n        <div class=\"row justify-content-start px-3\">\r\n            <div class=\"image-bg mr-3\"> <img class=\"user-img fit-image\"\r\n                    src=\"https://toppng.com/uploads/preview/company-profile-video-production-icon-circle-11569043630cktfusgdy8.png\">\r\n            </div>\r\n            <div class=\"text-left\">\r\n                <h2>{{user.username}}</h2>\r\n                <h6>{{user.email}}</h6>\r\n            </div>\r\n            <a class=\"btn btn-pink ml-auto\" routerLink=\"/user/edit\">\r\n                <span>\r\n                    <mat-icon>edit</mat-icon>\r\n                </span>\r\n            </a>\r\n        </div>\r\n        <div class=\"line\" *ngIf=\"user.likedMovies.length > 0\">Liked Movies</div>\r\n        <div class=\"line\" *ngIf=\"user.likedMovies.length == 0\">No liked movies still...\r\n            <br>\r\n            <a routerLink=\"/browse\">Go and find some!</a>\r\n        </div>\r\n        <div class=\"row d-flex justify-content-between px-3\" *ngIf=\"user.likedMovies.length > 0\">\r\n            <a class=\"prod-bg text-center py-1\" *ngFor=\"let movie of user.likedMovies\"\r\n                [routerLink]=\"['/movies/details', movie._id]\">\r\n                <img class=\"prod-pic\" [src]=\"movie.imageUrl\">\r\n            </a>\r\n        </div>\r\n        <div class=\"line\" *ngIf=\"user.ownedMovies.length > 0\">My Movies</div>\r\n        <div class=\"line\" *ngIf=\"user.ownedMovies.length == 0\">No owned movies still...\r\n            <br>\r\n            <a routerLink=\"/browse\">Go and find some!</a>\r\n        </div>\r\n        <div class=\"row d-flex justify-content-between px-3\" *ngIf=\"user.ownedMovies.length > 0\">\r\n            <a class=\"prod-bg text-center py-1\" *ngFor=\"let movie of user.ownedMovies\"\r\n                [routerLink]=\"['/movies/details', movie._id]\">\r\n                <img class=\"prod-pic\" [src]=\"movie.imageUrl\">\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IUser } from 'src/app/interfaces/user';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: IUser\n  isLoading: Boolean = false\n\n  get error(): string {\n    return this.alertService.error\n  }\n  \n  constructor(private userService: UserService, private alertService: AlertService) { }\n\n  ngOnInit(): void {\n    this.isLoading = true\n    this.userService.getUser().subscribe(\n      x => {\n        this.isLoading = false\n        this.user = x\n      },\n      err => {\n        this.isLoading = false\n        this.alertService.reset(err.error.message)\n      })\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IComment } from '../interfaces/comment';\nimport { IMovie } from '../interfaces/movie';\n\n@Injectable()\n\nexport class MovieService {\n\n  constructor(private http: HttpClient) { }\n\n  loadNextMovies(offset: number): Observable<IMovie[]> {\n    return this.http.get<IMovie[]>(`/api/movies?offset=${offset}`, { withCredentials: true })\n  }\n  loadAllMovies(): Observable<IMovie[]> {\n    return this.http.get<IMovie[]>(`/api/movies`, { withCredentials: true })\n  }\n  loadMovieById(id: String): Observable<IMovie> {\n    return this.http.get<IMovie>(\"/api/movies/\" + id, { withCredentials: true })\n  }\n  createMovie(data: IMovie): Observable<IMovie> {\n    return this.http.post<IMovie>(\"/api/movies\", data, { withCredentials: true })\n  }\n  editMovie(id: string, data: IMovie) {\n    return this.http.patch<IMovie>(\"/api/movies/\" + id, data, { withCredentials: true })\n  }\n  deleteMovie(id: string) {\n    return this.http.delete<IMovie>(\"/api/movies/\" + id, { withCredentials: true })\n  }\n  likeMovie(movieId: string): Observable<IMovie> {\n    return this.http.put<IMovie>(\"/api/movies/like\", { movieId }, { withCredentials: true })\n  }\n  comment(data: { message: string, movie: string }): Observable<IComment[]> {\n    return this.http.post<IComment[]>(\"/api/movies/comment\", data, { withCredentials: true })\n  }\n  deleteComment(commentId) {\n    return this.http.delete<IComment[]>(\"/api/movies/comment/\" + commentId, { withCredentials: true })\n  }\n  likeComment(commentId, movieId) {\n    return this.http.put<IComment[]>(\"/api/movies/comment/like\", { commentId, movieId }, { withCredentials: true })\n  }\n  dislikeComment(commentId, movieId) {\n    return this.http.put<IComment[]>(\"/api/movies/comment/dislike\", { commentId, movieId }, { withCredentials: true })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from \"@angular/router\"\nimport { timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { IMovie } from 'src/app/interfaces/movie';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { MovieService } from \"../../services/movie.service\"\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  isLoading: Boolean = false\n  movieId: string;\n  data: IMovie;\n\n  get error(): string {\n    return this.alertService.error\n  }\n  constructor(private movieService: MovieService, private router: Router, private route: ActivatedRoute, private alertService: AlertService) { }\n\n  ngOnInit(): void {\n    this.isLoading = true\n    this.route.params.pipe(switchMap(params => {\n      this.movieId = params.id\n      return this.movieService.loadMovieById(this.movieId)\n    })).subscribe(\n      movie => {\n        this.data = movie\n        this.isLoading = false\n      },\n      err => {\n        this.isLoading = false\n        this.alertService.reset(err.error.message)\n      })\n  }\n  submitHandler(fV: IMovie): void {\n    const data = {\n      author: fV.author,\n      description: fV.description,\n      genre: fV.genre,\n      name: fV.name,\n    }\n    this.isLoading = true\n    this.movieService.editMovie(this.movieId, data as IMovie)\n      .subscribe(\n        res => {\n          this.isLoading = false\n          this.router.navigate([\"/movies/details\", this.movieId])\n        },\n        err => {\n          this.isLoading = false\n          this.alertService.reset(err.error.message)\n        })\n  }\n}\n","<app-alert [message]=\"error\" *ngIf=\"error\"></app-alert>\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\n<div class=\"container create-trip\" *ngIf=\"data\">\n    <h1>Edit movie</h1>\n    <div>\n        <form #f=\"ngForm\" (ngSubmit)=\"submitHandler(f.value)\">\n            <div class=\"form-group\">\n                <label for=\"name\"> Movie Name \n                    <p class=\"error\" *ngIf=\"movie.touched && movie.errors?.required\">Movie name is required</p>\n                </label>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Movie Name\" name=\"name\" ngModel\n                    required #movie=\"ngModel\" [class.input-error]=\"movie.touched && movie.errors\" [(ngModel)]=\"data.name\">\n            </div>\n            <div class=\"create-label\">\n                <label for=\"genre\">\n                    Genre\n                    <p class=\"error\" *ngIf=\"genre.touched && genre.errors?.required\">Genre is required</p>\n                </label>\n                <label for=\"author\">Author\n                    <p class=\"error\" *ngIf=\"author.touched && author.errors?.required\">Author is required</p>\n                </label>\n            </div>\n            <div class=\"form-group create-input\">\n                <input type=\"text\" class=\"form-control-2\" id=\"genre\" placeholder=\"Genre\" name=\"genre\" ngModel required\n                    #genre=\"ngModel\" [class.input-error]=\"genre.touched && genre.errors\" [(ngModel)]=\"data.genre\">\n                <input type=\"text\" class=\"form-control-2\" id=\"author\" placeholder=\"Author\" name=\"author\" ngModel\n                    required #author=\"ngModel\" [class.input-error]=\"author.touched && author.errors\" [(ngModel)]=\"data.author\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Description\n                    <p class=\"error\" *ngIf=\"description.touched && description.errors?.required\">\n                        Description is required\n                    </p>\n                    <p class=\"error\" *ngIf=\"description.touched && description.errors?.minlength\">\n                        Description must be atleast 10 characters long\n                    </p>\n                </label>\n                <textarea class=\"form-control\" id=\"description\" placeholder=\"Information about the movie\"\n                    name=\"description\" ngModel required minlength=\"10\" #description=\"ngModel\" [class.input-error]=\"description.touched && description.errors\" [(ngModel)]=\"data.description\"></textarea>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid\">Create</button>\n        </form>\n    </div>\n</div>","import { FormGroup } from '@angular/forms';\r\n    \r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n            return ({ confirmedValidator: true })\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n        return null\r\n    }\r\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n  @Output() sidenavClose = new EventEmitter();\r\n  get isLogged(): boolean {\r\n    return this.userService.isLogged\r\n  }\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  public onSidenavClose = () => {\r\n    this.sidenavClose.emit();\r\n  }\r\n  logout(event): void {\r\n    event.preventDefault()\r\n    this.userService.logout().subscribe(() => {\r\n      this.sidenavClose.emit();\r\n      this.router.navigate([\"/\"])\r\n    })\r\n  }\r\n}\r\n","<mat-nav-list>\r\n    <a mat-list-item routerLink=\"/\" (click)=\"onSidenavClose()\" *ngIf=\"!isLogged\">\r\n        <mat-icon>home</mat-icon> <span class=\"nav-caption\">Home</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/browse\" (click)=\"onSidenavClose()\" *ngIf=\"isLogged\">\r\n        <mat-icon>local_movies</mat-icon> <span class=\"nav-caption\">BROWSE</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/movies/create\" (click)=\"onSidenavClose()\" *ngIf=\"isLogged\">\r\n        <mat-icon>add</mat-icon><span class=\"nav-caption\">Create</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/user/register\" (click)=\"onSidenavClose()\" *ngIf=\"!isLogged\">\r\n        <mat-icon>lock</mat-icon><span class=\"nav-caption\" >REGISTER</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/user/login\" (click)=\"onSidenavClose()\" *ngIf=\"!isLogged\">\r\n        <mat-icon>lock_open</mat-icon><span class=\"nav-caption\">LOGIN</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/user/profile\" (click)=\"onSidenavClose()\" *ngIf=\"isLogged\">\r\n        <mat-icon>face</mat-icon><span class=\"nav-caption\">PROFILE</span>\r\n    </a>\r\n    <a mat-list-item *ngIf=\"isLogged\" (click)=\"logout($event)\">\r\n        <mat-icon>exit_to_app</mat-icon><span class=\"nav-caption\">SIGN OUT</span>\r\n    </a>\r\n</mat-nav-list>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertComponent } from './alert/alert.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SpinnerComponent } from './spinner/spinner.component';\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    SpinnerComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbModule\n  ],\n  exports: [AlertComponent, SpinnerComponent]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../core/auth.guard';\r\nimport { OwnerGuard } from '../core/owner.guard';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { EditComponent } from './edit/edit.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        pathMatch: \"full\",\r\n        redirectTo: \"/404\"\r\n    },\r\n    {\r\n        path: \"details/:id\",\r\n        component: DetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            isLogged: true\r\n        }\r\n    },\r\n    {\r\n        path: \"create\",\r\n        component: CreateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            isLogged: true\r\n        }\r\n    },\r\n    {\r\n        path: \"edit/:id\",\r\n        component: EditComponent,\r\n        canActivate: [OwnerGuard],\r\n        data: {\r\n            isLogged: true\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MovieRoutingModule { }","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private userService: UserService, private router: Router) { }\n\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isLogged = route.data.isLogged\n    if (typeof isLogged == \"boolean\" && isLogged == this.userService.isLogged) {\n      return true\n    }\n    this.router.navigate([\"/\"])\n    return false\n  }\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isLogged = childRoute.data.isLogged\n  \n    if (typeof isLogged == \"boolean\" && isLogged == this.userService.isLogged) {\n      return true\n    }\n    this.router.navigate([\"/\"])\n    return false\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav role=\"navigation\">\n    <app-side-nav (sidenavClose)=\"sidenav.close()\"></app-side-nav>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-header (sidenavToggle)=\"sidenav.toggle()\"></app-header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class OwnerGuard implements CanActivate {\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isLogged = route.data.isLogged\n    const url = state.url\n    const id = url.slice(url.lastIndexOf(\"/\") + 1)\n    if (typeof isLogged == \"boolean\" && isLogged != this.userService.isLogged) {\n      this.router.navigate([\"/\"])\n      return false\n    }\n    const canActivate = this.userService.getUser().pipe(map(x => {\n      const isOwner =  x.ownedMovies.some(x => x._id == id)\n      if(!isOwner) this.router.navigate([\"/\"])\n      return isOwner\n    }))\n\n    return canActivate\n  }\n}\n","<app-alert [message]=\"error\" *ngIf=\"error\"></app-alert>\r\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\r\n<div class=\"container create-trip\">\r\n    <h1>Create movie</h1>\r\n    <div>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"submitHandler(f.value)\">\r\n            <div class=\"form-group\">\r\n                <label for=\"name\"> Movie Name \r\n                    <p class=\"error\" *ngIf=\"movie.touched && movie.errors?.required\">Movie name is required</p>\r\n                </label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Movie Name\" name=\"name\" ngModel\r\n                    required #movie=\"ngModel\" [class.input-error]=\"movie.touched && movie.errors\">\r\n            </div>\r\n            <div class=\"create-label\">\r\n                <label for=\"genre\">\r\n                    Genre\r\n                    <p class=\"error\" *ngIf=\"genre.touched && genre.errors?.required\">Genre is required</p>\r\n                </label>\r\n                <label for=\"author\">Author\r\n                    <p class=\"error\" *ngIf=\"author.touched && author.errors?.required\">Author is required</p>\r\n                </label>\r\n            </div>\r\n            <div class=\"form-group create-input\">\r\n                <input type=\"text\" class=\"form-control-2\" id=\"genre\" placeholder=\"Genre\" name=\"genre\" ngModel required\r\n                    #genre=\"ngModel\" [class.input-error]=\"genre.touched && genre.errors\">\r\n                <input type=\"text\" class=\"form-control-2\" id=\"author\" placeholder=\"Author\" name=\"author\" ngModel\r\n                    required #author=\"ngModel\" [class.input-error]=\"author.touched && author.errors\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <p class=\"error\" *ngIf=\"trailerFileError\">{{trailerFileError}}</p>\r\n                <label for=\"trailer\" class=\"file-label\">{{trailerNameAndSize}}</label>\r\n                <input type=\"file\" name=\"trailer\" id=\"trailer\" class=\"file\" ngModel #trailer=\"ngModel\" required (change)=\"onTrailerChange($event)\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <p class=\"error\" *ngIf=\"imgfileError\">{{imgfileError}}</p>\r\n                <label for=\"movieImage\" class=\"file-label\">{{imgNameAndSize}}</label>\r\n                <input type=\"file\" name=\"image\" id=\"movieImage\" class=\"file\" ngModel #img=\"ngModel\" required (change)=\"onImgChange($event)\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"description\">Description\r\n                    <p class=\"error\" *ngIf=\"description.touched && description.errors?.required\">\r\n                        Description is required\r\n                    </p>\r\n                    <p class=\"error\" *ngIf=\"description.touched && description.errors?.minlength\">\r\n                        Description must be atleast 10 characters long\r\n                    </p>\r\n                </label>\r\n                <textarea class=\"form-control\" id=\"description\" placeholder=\"Information about the movie\"\r\n                    name=\"description\" ngModel required minlength=\"10\" #description=\"ngModel\" [class.input-error]=\"description.touched && description.errors\"></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || !imageFile || !trailerFile\">Create</button>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IMovie } from 'src/app/interfaces/movie';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { UploadService } from 'src/app/services/upload.service';\nimport { timer } from \"rxjs\"\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  isLoading: Boolean = false\n  imgNameAndSize: string = \"Choose Movie Image\"\n  trailerNameAndSize: string = \"Choose Movie Trailer under 100MB\"\n  imageFile: File = undefined\n  trailerFile: File = undefined\n  imgfileError: string\n  trailerFileError: string\n\n  get error(): string {\n    return this.alertService.error\n  }\n\n  constructor(private movieService: MovieService, private uploadService: UploadService, private router: Router, private alertService: AlertService) { }\n\n  ngOnInit(): void {\n  }\n  submitHandler(fV: IMovie): void {\n    const data = {\n      author: fV.author,\n      description: fV.description,\n      genre: fV.genre,\n      name: fV.name,\n    }\n    this.isLoading = true\n    Promise.all([\n      this.uploadService.upload(this.imageFile).toPromise(),\n      this.uploadService.upload(this.trailerFile).toPromise(),\n    ]).then(x => {\n      const image = x.find(file => file.video === undefined)\n      const trailer = x.find(file => file.video !== undefined)      \n      \n      Object.assign(data, { trailerID: trailer.public_id, trailerUrl: trailer.url, imageID: image.public_id, imageUrl: image.url })\n      this.movieService.createMovie(data as IMovie).subscribe(\n        res => {\n          this.isLoading = false\n          this.router.navigate([\"/browse\"])\n        },\n        err => {\n          this.isLoading = false\n          this.alertService.reset(err.error.message)\n        })\n    })\n  }\n  onImgChange(event): void {\n    const [file] = event.target.files\n    const { name: fileName, size } = file;\n    const fileSize = (size / 1000).toFixed(2);\n    this.imgNameAndSize = `${fileName} - ${fileSize}KB`;\n    if (![\"image/jpg\", \"image/jpeg\", \"image/png\"].includes(file.type)) {\n      this.imageFile = undefined\n      this.imgfileError = \"Image should be in image format\"\n      return undefined\n    }\n    this.imgfileError = undefined\n    this.imageFile = file\n  }\n  onTrailerChange(event): void {\n    const [file] = event.target.files\n    const { name: fileName, size } = file;\n    const fileSize = (size / 1000).toFixed(2);\n    this.trailerNameAndSize = `${fileName} - ${fileSize}KB`;\n    if (![\"video/mp4\", \"video/mov\", \"video/wmv\", \"video/avi\"].includes(file.type)) {\n      this.trailerFile = undefined\n      this.trailerFileError = \"Trailer should be in video format\"\n      return undefined\n    }\n    if(Number(fileSize) > 100000) {\n      this.trailerFile = undefined\n      this.trailerFileError = \"Trailer should be under 100MB\"\n      return undefined\n    }\n    this.trailerFileError = undefined\n    this.trailerFile = file\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: [\"./alert.component.css\"]\n})\nexport class AlertComponent{\n  @Input() message: String\n\n  constructor() {\n  }\n}","<div class=\"error\">\n    <p>{{message}}</p>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../core/auth.guard';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        pathMatch: \"full\",\r\n        redirectTo: \"/404\"\r\n    },\r\n    {\r\n        path: \"login\",\r\n        component: LoginComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            isLogged: false\r\n        }\r\n    },\r\n    {\r\n        path: \"register\",\r\n        component: RegisterComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            isLogged: false\r\n        }\r\n    },\r\n    {\r\n        path: \"profile\",\r\n        component: ProfileComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            isLogged: true\r\n        }\r\n    },\r\n    {\r\n        path: \"edit\",\r\n        component: EditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            isLogged: true\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { MovieService } from './services/movie.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AlertService } from './services/alert.service';\r\nimport { UploadService } from './services/upload.service';\r\nimport { UserService } from './services/user.service';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [MovieService, AlertService, UploadService, UserService, FormBuilder],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ConfirmedValidator } from '../../shared/validators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: FormGroup\n  isLoading: boolean = false\n\n  get error(): string {\n    return this.alertService.error\n  }\n\n  constructor(private fb: FormBuilder, private userService: UserService, private router: Router, private alertService: AlertService) {\n    this.form = this.fb.group({\n      email: [\"\", [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n      username: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n      repeatPassword: [\"\", [Validators.required]]\n    }, { validators: [ConfirmedValidator(\"password\", \"repeatPassword\")] })\n  }\n  ngOnInit() {\n\n  }\n  submitHandler(): void {\n    this.isLoading = true\n    this.userService.register(this.form.value).subscribe(\n      res => {\n      this.isLoading = false\n      this.router.navigate([\"/browse\"])\n      },\n      err => {\n        this.isLoading = false\n        this.alertService.reset(err.error.message)\n      }\n    )\n  }\n}","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\n\n<form class=\"register-box\" [formGroup]=\"form\" (ngSubmit)=\"submitHandler()\">\n    <h1>Register</h1>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('email').touched && form.get('email').errors?.required\">Email is required</p>\n        <p class=\"error\" *ngIf=\"form.get('email').touched && form.get('email').errors?.pattern\">Email is in incorrect format</p>\n        <i class=\"fas fa-user\"></i>\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" formControlName=\"email\"\n            [class.input-error]=\"form.get('email').touched && form.get('email').errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('username').touched && form.get('username').errors?.required\">Username is required</p>\n        <i class=\"fas fa-user-tie\"></i>\n        <input type=\"text\" placeholder=\"Username\" name=\"username\" formControlName=\"username\"\n            [class.input-error]=\"form.get('username').touched && form.get('username').errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('password').touched && form.get('password').errors?.required\">Password is required</p>\n        <i class=\"fas fa-lock\"></i>\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" formControlName=\"password\"\n            [class.input-error]=\"form.get('password').touched && form.get('password').errors\">\n    </div>\n    <div class=\"textbox\">\n        <p class=\"error\" *ngIf=\"form.get('repeatPassword').touched && form.get('repeatPassword').errors?.required\">Repeat Password is required</p>\n        <p class=\"error\" *ngIf=\"form.get('repeatPassword').touched && form.get('repeatPassword').errors?.confirmedValidator\">Passwords must match</p>\n        <i class=\"fas fa-key\"></i>\n        <input type=\"password\" placeholder=\"Repeat Password\" name=\"repeatPassword\" formControlName=\"repeatPassword\"\n            [class.input-error]=\"form.get('repeatPassword').touched && form.get('repeatPassword').errors\">\n    </div>\n    <input type=\"submit\" class=\"btn\" value=\"Sign Up\" [disabled]=\"form.invalid\">\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loading\">\r\n    <div class=\"sk-cube-grid\">\r\n        <div class=\"sk-cube sk-cube1\"></div>\r\n        <div class=\"sk-cube sk-cube2\"></div>\r\n        <div class=\"sk-cube sk-cube3\"></div>\r\n        <div class=\"sk-cube sk-cube4\"></div>\r\n        <div class=\"sk-cube sk-cube5\"></div>\r\n        <div class=\"sk-cube sk-cube6\"></div>\r\n        <div class=\"sk-cube sk-cube7\"></div>\r\n        <div class=\"sk-cube sk-cube8\"></div>\r\n        <div class=\"sk-cube sk-cube9\"></div>\r\n      </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { IMovie } from 'src/app/interfaces/movie';\nimport { IUser } from 'src/app/interfaces/user';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  movieId: string\n  movie: IMovie\n  isLiked: boolean\n  comments: any[]\n  user: IUser\n  isLoading: Boolean = false\n  get error(): string {\n    return this.alertService.error\n  }\n\n  constructor(private route: ActivatedRoute, private movieService: MovieService, private userService: UserService, private alertService: AlertService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.isLoading = true\n    this.userService.getUser().pipe(switchMap((x: IUser) => {\n      this.user = x\n      return this.route.params\n    })).pipe(switchMap(params => {\n      this.movieId = params.id\n      return this.movieService.loadMovieById(this.movieId)\n    })).subscribe(movie => {\n      this.isLoading = false\n      this.movie = movie\n      this.isLiked = this.movie.likes.some(x => x == this.user._id)\n      this.assignComments(movie.comments)\n    }, this.errorHandler)\n\n  }\n  likeMovie() {\n    this.isLoading = true\n    this.movieService.likeMovie(this.movieId).subscribe(x => {\n      this.isLoading = false\n      this.movie = x\n      this.isLiked = this.movie.likes.some(x => x == this.user._id)\n    }, this.errorHandler)\n  }\n  deleteMovie() {\n    this.isLoading = true\n    this.movieService.deleteMovie(this.movieId).subscribe(x => {\n      this.isLoading = false\n      this.router.navigate([\"/browse\"])\n    }, this.errorHandler)\n  }\n\n  comment(fV) {\n    this.isLoading = true\n    Object.assign(fV, { movie: this.movieId })\n    this.movieService.comment(fV).subscribe(x => {\n      this.isLoading = false\n      this.assignComments(x)\n    }, this.errorHandler)\n  }\n  deleteComment(commentId: string) {\n    this.isLoading = true\n    this.movieService.deleteComment(commentId).subscribe(x => {\n      this.isLoading = false\n      this.assignComments(x)\n    }, this.errorHandler)\n  }\n  likeComment(target: HTMLElement, commentId: string) {\n\n    if (target.classList.contains(\"disabled\")) {\n      return\n    }\n    this.isLoading = true\n    this.movieService.likeComment(commentId, this.movieId).subscribe(x => {\n      this.isLoading = false\n      this.assignComments(x)\n    }, this.errorHandler)\n  }\n  dislikeComment(target: HTMLElement, commentId: string) {\n    this.isLoading = true\n    if (target.classList.contains(\"disabled\")) {\n      return\n    }\n    this.movieService.dislikeComment(commentId, this.movieId).subscribe(x => {\n      this.isLoading = false\n      this.assignComments(x)\n    }, this.errorHandler)\n  }\n  private assignComments(comments: any[]): void {\n    this.comments = comments\n    this.comments.map(x => x.isLiked = x.likes.some((y: string) => y == this.user._id))\n  }\n  private errorHandler(err) {\n    this.alertService.reset(err.error.message)\n    this.isLoading = false\n  }\n}\n","<app-alert *ngIf=\"error\" [message]=\"error\"></app-alert>\r\n<app-spinner *ngIf=\"isLoading\"></app-spinner>\r\n<div class=\"content\" *ngIf=\"movie\">\r\n    <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"mat-elevation-z4 container\">\r\n                <h3>{{movie.name}}</h3>\r\n                <div class=\"wrapper\">\r\n                    <video [src]=\"movie.trailerUrl\" controls width=\"100%\" height=\"450px\" [poster]=\"movie.imageUrl\">\r\n                    </video>\r\n                    <div class=\"info\">\r\n                        <p>Description: {{movie.description}}</p>\r\n                        <p>Genre: {{movie.genre}}</p>\r\n                        <p>Author: {{movie.author}}</p>\r\n                    </div>\r\n                    <mat-card-actions>\r\n                        <a [routerLink]=\"['/movies/edit', movieId]\" class=\"orange\" mat-button\r\n                            *ngIf=\"movie.owner == user._id\">\r\n                            <mat-icon>edit</mat-icon>\r\n                            Edit\r\n                        </a>\r\n                        <a class=\"red\" mat-button *ngIf=\"movie.owner == user._id\" (click)=\"deleteMovie()\">\r\n                            <mat-icon>delete</mat-icon>\r\n                            Delete\r\n                        </a>\r\n                        <a class=\"favorite\" mat-button *ngIf=\"!isLiked && movie.owner != user._id\"\r\n                            (click)=\"likeMovie()\">\r\n                            <mat-icon>favorite</mat-icon>\r\n                            Like\r\n                        </a>\r\n                        <span *ngIf=\"isLiked || movie.owner == user._id\">\r\n                            <mat-icon class=\"likes\">favorite</mat-icon> {{movie.likes.length}} likes\r\n                        </span>\r\n                    </mat-card-actions>\r\n                </div>\r\n                <section>\r\n                    <form #f=\"ngForm\" (ngSubmit)=\"comment(f.value); f.reset()\">\r\n                        <div class=\"d-flex flex-row add-comment-section mt-4 mb-4\">\r\n                            <img class=\"img-fluid img-responsive rounded-circle mr-2\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1024px-Circle-icons-profile.svg.png\"\r\n                                width=\"38\">\r\n                            <input type=\"text\" class=\"form-control mr-3 comment\" placeholder=\"Add comment\"\r\n                                name=\"message\" ngModel required #message=\"ngModel\"\r\n                                [class.input-error]=\"message.touched && message.errors\">\r\n                            <input class=\"btn btn-primary\" type=\"submit\" value=\"Comment\" [disabled]=\"f.invalid\">\r\n                        </div>\r\n                    </form>\r\n                    <ul>\r\n                        <li *ngFor=\"let comment of comments\">\r\n                            <div class=\"d-flex flex-row align-items-center commented-user\">\r\n                                <h5 class=\"mr-2\" *ngIf=\"comment.owner._id == user._id\">{{comment.owner.username}} (you)\r\n                                </h5>\r\n                                <h5 class=\"mr-2\" *ngIf=\"comment.owner._id != user._id\">{{comment.owner.username}}</h5>\r\n                            </div>\r\n                            <div class=\"comment-text-sm\"><span>{{comment.message}}</span></div>\r\n                            <div class=\"reply-section\">\r\n                                <div class=\"d-flex flex-row align-items-center voting-icons\">\r\n                                    <mat-icon class=\"vote\" [class.disabled]=\"comment.isLiked\"\r\n                                        (click)=\"likeComment($event.target, comment._id)\"\r\n                                        *ngIf=\"comment.owner._id != user._id\">thumb_up</mat-icon>\r\n\r\n                                    <mat-icon class=\"vote\" [class.disabled]=\"!comment.isLiked\"\r\n                                        (click)=\"dislikeComment($event.target, comment._id)\"\r\n                                        *ngIf=\"comment.owner._id != user._id\">thumb_down</mat-icon>\r\n                                    <span class=\"ml-2\">{{comment.likes.length}}\r\n                                    </span>\r\n                                    <mat-icon *ngIf=\"comment.owner._id == user._id\" class=\"trashcan\"\r\n                                        (click)=\"deleteComment(comment._id)\">delete</mat-icon>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </section>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { MatSidenavModule } from \"@angular/material/sidenav\"\nimport { MatTabsModule } from \"@angular/material/tabs\"\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule} from \"@angular/material/icon\"\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from \"@angular/material/card\"\nimport { MatPaginatorModule } from \"@angular/material/paginator\"\nimport { MatInputModule } from \"@angular/material/input\"\nimport { MatFormFieldModule } from \"@angular/material/form-field\"\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatCardModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule\n  ]\n})\nexport class MaterialModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private http: HttpClient) { }\n\n  upload(file: File): Observable<any> {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", \"HotFlix\")\n      formData.append(\"cloud_name\", \"douwa5b0u\")\n    \n     return this.http.post(\"https://api.cloudinary.com/v1_1/douwa5b0u/auto/upload\", formData)\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { BrowseComponent } from './browse/browse.component';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { SideNavComponent } from './side-nav/side-nav.component';\r\nimport { UserRoutingModule } from '../user/user-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlertService } from '../services/alert.service';\r\nimport { MovieRoutingModule } from '../movie/movie-routing.module';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { OwnerGuard } from './owner.guard';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    BrowseComponent,\r\n    SideNavComponent,\r\n    HomeComponent,\r\n    NotFoundComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    UserRoutingModule,\r\n    MovieRoutingModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    SideNavComponent,\r\n    NotFoundComponent\r\n  ],\r\n  providers: [UserService, AlertService, OwnerGuard, AuthGuard]\r\n})\r\nexport class CoreModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IUser } from '../interfaces/user';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  get isLogged(): boolean {\r\n    return !!sessionStorage.getItem(\"isLogged\")\r\n  }\r\n  constructor(private http: HttpClient) { }\r\n\r\n  register(body: Object): Observable<IUser> {\r\n    return this.http.post<IUser>(`/api/user/register`, body, { withCredentials: true }).pipe(tap((x: IUser) => {\r\n      sessionStorage.setItem(\"isLogged\", \"true\")\r\n    }))\r\n  }\r\n  login(body: Object): Observable<IUser> {\r\n    return this.http.post<IUser>(`/api/user/login`, body, { withCredentials: true }).pipe(tap((x: IUser) => {\r\n      sessionStorage.setItem(\"isLogged\", \"true\")\r\n    }))\r\n  }\r\n  logout(): Observable<any> {\r\n    return this.http.post<any>(`/api/user/logout`, {}, { withCredentials: true }).pipe(tap(() => {\r\n      sessionStorage.removeItem(\"isLogged\")\r\n    }))\r\n  }\r\n  getUser(): Observable<IUser> {\r\n    return this.http.get<IUser>(\"/api/user/profile\", { withCredentials: true })\r\n  }\r\n  editUser(data: Object): Observable<IUser> {\r\n    return this.http.post<IUser>(\"/api/user/edit\", data, { withCredentials: true })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './core/auth.guard';\r\nimport { BrowseComponent } from './core/browse/browse.component';\r\nimport { HomeComponent } from './core/home/home.component';\r\nimport { NotFoundComponent } from './core/not-found/not-found.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    pathMatch: \"full\",\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: \"browse\",\r\n    component: BrowseComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      isLogged: true\r\n    }\r\n  },\r\n  {\r\n    path: \"user\",\r\n    loadChildren: () => import(\"./user/user.module\").then(m=> m.UserModule)\r\n  },\r\n  {\r\n    path: \"movies\",\r\n    loadChildren: () => import(\"./movie/movie.module\").then(m=> m.MovieModule)\r\n  },\r\n    //>>>>-- Оправих се, мерси за отделеното време :) --<<<<\r\n  {\r\n    path: \"**\",\r\n    redirectTo: \"/404\"\r\n  },\r\n  {\r\n    path: \"404\",\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}